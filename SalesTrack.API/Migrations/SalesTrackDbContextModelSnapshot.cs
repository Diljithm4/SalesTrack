// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesTrack.API.Data;

#nullable disable

namespace SalesTrack.API.Migrations
{
    [DbContext(typeof(SalesTrackDbContext))]
    partial class SalesTrackDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesTrack.API.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities", (string)null);

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Mumbai",
                            CountryId = 1
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Delhi",
                            CountryId = 1
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Beijing",
                            CountryId = 2
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Shanghai",
                            CountryId = 2
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Dubai",
                            CountryId = 3
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Abu Dhabi",
                            CountryId = 3
                        },
                        new
                        {
                            CityId = 7,
                            CityName = "New York",
                            CountryId = 4
                        },
                        new
                        {
                            CityId = 8,
                            CityName = "San Francisco",
                            CountryId = 4
                        });
                });

            modelBuilder.Entity("SalesTrack.API.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "India"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "China"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "UAE"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryName = "USA"
                        });
                });

            modelBuilder.Entity("SalesTrack.API.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductName = "Laptop"
                        },
                        new
                        {
                            ProductId = 2,
                            ProductName = "Smartphone"
                        },
                        new
                        {
                            ProductId = 3,
                            ProductName = "Tablet"
                        },
                        new
                        {
                            ProductId = 4,
                            ProductName = "Smartwatch"
                        },
                        new
                        {
                            ProductId = 5,
                            ProductName = "Desktop PC"
                        },
                        new
                        {
                            ProductId = 6,
                            ProductName = "Gaming Console"
                        },
                        new
                        {
                            ProductId = 7,
                            ProductName = "Wireless Earbuds"
                        },
                        new
                        {
                            ProductId = 8,
                            ProductName = "Bluetooth Speaker"
                        },
                        new
                        {
                            ProductId = 9,
                            ProductName = "Smart TV"
                        },
                        new
                        {
                            ProductId = 10,
                            ProductName = "Camera"
                        });
                });

            modelBuilder.Entity("SalesTrack.API.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Sales", null, t =>
                        {
                            t.HasCheckConstraint("CK_Sales_Amount", "[Amount] >= 0");

                            t.HasCheckConstraint("CK_Sales_Quantity", "[Quantity] > 0");
                        });

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            Amount = 350000m,
                            CityId = 1,
                            CountryId = 1,
                            ProductId = 1,
                            Quantity = 5,
                            SaleDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            SaleId = 2,
                            Amount = 500000m,
                            CityId = 2,
                            CountryId = 1,
                            ProductId = 2,
                            Quantity = 10,
                            SaleDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SalesTrack.API.Models.SalesUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserName = "Diljith"
                        },
                        new
                        {
                            UserId = 2,
                            UserName = "Akshay"
                        },
                        new
                        {
                            UserId = 3,
                            UserName = "Rajeev"
                        });
                });

            modelBuilder.Entity("SalesTrack.API.Models.City", b =>
                {
                    b.HasOne("SalesTrack.API.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SalesTrack.API.Models.Sale", b =>
                {
                    b.HasOne("SalesTrack.API.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SalesTrack.API.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SalesTrack.API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SalesTrack.API.Models.SalesUser", "SalesUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Product");

                    b.Navigation("SalesUser");
                });

            modelBuilder.Entity("SalesTrack.API.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
